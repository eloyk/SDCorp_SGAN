{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { firebase } from '../../firebase';\nconst db = firebase.firestore();\nconst dbOrderRef = db.collection('products');\nimport cookie from 'js-cookie';\nimport TYPES from './../types';\nconst token = '76483461103103918uhkjdkjc';\nconst initState = {\n  products: [],\n  addedItems: [],\n  total: 0,\n  shipping: 0,\n  login: false\n};\n\nconst cartReducer = (state = initState, action) => {\n  // User Logout\n  if (action.type === TYPES.USRER_LOGOUT) {\n    cookie.remove('_livani_token_');\n    return _objectSpread(_objectSpread({}, state), {}, {\n      login: false\n    });\n  } // Check if user login\n\n\n  if (action.type === TYPES.CHECK_USRER_LOGIN) {\n    const getToken = cookie.get('_livani_token_');\n\n    if (getToken == token) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: true\n      });\n    } else {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: false\n      });\n    }\n  } // User Login\n\n\n  if (action.type === TYPES.USRER_LOGIN) {\n    cookie.set('_livani_token_', token);\n    const getToken = cookie.get('_livani_token_'); // console.log('token', getToken)\n\n    if (getToken == token) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: true\n      });\n    } else {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: false\n      });\n    }\n  }\n\n  if (action.type === TYPES.ADD_PRODUCTS) {\n    let productsArray = [];\n    dbOrderRef.get().then(res => {\n      res.forEach(doc => {\n        let productsObj = doc.data();\n        productsObj.id = doc.id;\n        productsArray.push(productsObj);\n      });\n    }); // console.log('www', productsArray)\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      products: productsArray\n    });\n  }\n\n  if (action.type === TYPES.ADD_TO_CART) {\n    let addedItem = state.products.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += 1;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.newPrice\n      });\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      let newTotal = state.total + addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === TYPES.ADD_QUANTITY_WITH_NUMBER) {\n    let addedItem = state.products.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.newPrice * action.qty\n      });\n    } else {\n      addedItem.quantity = action.qty; //calculating the total\n\n      let newTotal = state.total + addedItem.newPrice * action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === TYPES.REMOVE_ITEM) {\n    let itemToRemove = state.addedItems.find(item => action.id === item.id);\n    let new_items = state.addedItems.filter(item => action.id !== item.id); //calculating the total\n\n    let newTotal = state.total - itemToRemove.newPrice * itemToRemove.quantity;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: new_items,\n      total: newTotal\n    });\n  }\n\n  if (action.type === TYPES.ADD_QUANTITY) {\n    let addedItem = state.products.find(item => item.id === action.id);\n    addedItem.quantity += 1;\n    let newTotal = state.total + addedItem.newPrice;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total: newTotal\n    });\n  }\n\n  if (action.type === TYPES.SUB_QUANTITY) {\n    let addedItem = state.products.find(item => item.id === action.id); //if the qt == 0 then it should be removed\n\n    if (addedItem.quantity === 1) {\n      let new_items = state.addedItems.filter(item => item.id !== action.id);\n      let newTotal = state.total - addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: new_items,\n        total: newTotal\n      });\n    } else {\n      addedItem.quantity -= 1;\n      let newTotal = state.total - addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === TYPES.ADD_SHIPPING) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping += 30\n    });\n  }\n\n  if (action.type === 'SUB_SHIPPING') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping -= 30\n    });\n  }\n\n  if (action.type === TYPES.RESET_CART) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: [],\n      total: 0,\n      shipping: 0\n    });\n  } else {\n    return state;\n  }\n};\n\nexport const initStore = (initialState = initState) => {\n  return createStore(cartReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n};","map":{"version":3,"sources":["C:/Users/EloyCastillo/Desktop/SDCorp_SGAN/front-end/store/reducers/cartReducer.jsx"],"names":["createStore","applyMiddleware","thunk","composeWithDevTools","firebase","db","firestore","dbOrderRef","collection","cookie","TYPES","token","initState","products","addedItems","total","shipping","login","cartReducer","state","action","type","USRER_LOGOUT","remove","CHECK_USRER_LOGIN","getToken","get","USRER_LOGIN","set","ADD_PRODUCTS","productsArray","then","res","forEach","doc","productsObj","data","id","push","ADD_TO_CART","addedItem","find","item","existed_item","quantity","newPrice","newTotal","ADD_QUANTITY_WITH_NUMBER","qty","REMOVE_ITEM","itemToRemove","new_items","filter","ADD_QUANTITY","SUB_QUANTITY","ADD_SHIPPING","RESET_CART","initStore","initialState"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { firebase } from '../../firebase';\r\nconst db = firebase.firestore();\r\nconst dbOrderRef = db.collection('products');\r\nimport cookie from 'js-cookie';\r\n\r\nimport TYPES from './../types'\r\n\r\nconst token = '76483461103103918uhkjdkjc';\r\n\r\nconst initState = {\r\n    products: [],\r\n    addedItems:[],\r\n    total: 0,\r\n    shipping: 0,\r\n    login: false\r\n}\r\n\r\nconst cartReducer = (state = initState, action) => {\r\n\r\n    // User Logout\r\n    if (action.type === TYPES.USRER_LOGOUT){\r\n        cookie.remove('_livani_token_')\r\n        return{\r\n            ...state,\r\n            login: false\r\n        }\r\n    }\r\n\r\n    // Check if user login\r\n    if (action.type === TYPES.CHECK_USRER_LOGIN){\r\n        const getToken = cookie.get('_livani_token_')\r\n\r\n        if (getToken == token){\r\n            return{\r\n                ...state,\r\n                login: true\r\n            }\r\n        } else {\r\n            return{\r\n                ...state,\r\n                login: false\r\n            }\r\n        }\r\n    }\r\n\r\n    // User Login\r\n    if(action.type === TYPES.USRER_LOGIN){\r\n        cookie.set('_livani_token_', token);\r\n\r\n        const getToken = cookie.get('_livani_token_')\r\n\r\n        // console.log('token', getToken)\r\n\r\n        if (getToken == token){\r\n            return{\r\n                ...state,\r\n                login: true\r\n            }\r\n        } else {\r\n            return{\r\n                ...state,\r\n                login: false\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    if(action.type === TYPES.ADD_PRODUCTS){\r\n        let productsArray = [];\r\n        dbOrderRef.get()\r\n        .then(res => {\r\n            res.forEach(doc => {\r\n                let productsObj = doc.data();\r\n                productsObj.id = doc.id;\r\n                productsArray.push(productsObj)\r\n            });\r\n        });\r\n\r\n        // console.log('www', productsArray)\r\n        \r\n        return{\r\n            ...state,\r\n            products: productsArray\r\n        }\r\n    }\r\n   \r\n    if(action.type === TYPES.ADD_TO_CART){\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        //check if the action id exists in the addedItems\r\n        let existed_item= state.addedItems.find(item=> action.id === item.id)\r\n        if(existed_item)\r\n        {\r\n            addedItem.quantity += 1 \r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.newPrice \r\n            }\r\n        } else {\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.newPrice \r\n            \r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    if(action.type === TYPES.ADD_QUANTITY_WITH_NUMBER){\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        //check if the action id exists in the addedItems\r\n        let existed_item= state.addedItems.find(item=> action.id === item.id)\r\n        if(existed_item)\r\n        {\r\n            addedItem.quantity += action.qty\r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.newPrice * action.qty\r\n            }\r\n        } else {\r\n            addedItem.quantity = action.qty;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.newPrice * action.qty\r\n            \r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n\r\n    if(action.type === TYPES.REMOVE_ITEM){\r\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\r\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\r\n        \r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.newPrice * itemToRemove.quantity );\r\n\r\n        return {\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if(action.type === TYPES.ADD_QUANTITY){\r\n        let addedItem = state.products.find(item=> item.id === action.id)\r\n        addedItem.quantity += 1 \r\n        let newTotal = state.total + addedItem.newPrice\r\n        return {\r\n            ...state,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if(action.type === TYPES.SUB_QUANTITY){  \r\n        let addedItem = state.products.find(item=> item.id === action.id) \r\n        //if the qt == 0 then it should be removed\r\n        if(addedItem.quantity === 1){\r\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\r\n            let newTotal = state.total - addedItem.newPrice\r\n            return {\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        } else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.newPrice\r\n            return {\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    if(action.type === TYPES.ADD_SHIPPING){\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping += 30\r\n        }\r\n    }\r\n\r\n    if(action.type === 'SUB_SHIPPING'){\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping -= 30\r\n        }\r\n    }\r\n\r\n    if(action.type === TYPES.RESET_CART){\r\n        return {\r\n            ...state,\r\n            addedItems: [],\r\n            total: 0,\r\n            shipping: 0\r\n        }\r\n    }\r\n    \r\n    else {\r\n        return state\r\n    }\r\n}\r\n\r\nexport const initStore = (initialState = initState) => {\r\n    return createStore(\r\n        cartReducer,\r\n        initialState,\r\n        composeWithDevTools(applyMiddleware(thunk))\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}