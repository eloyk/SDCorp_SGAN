{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport QuickViewModal from '../Modals/QuickViewModal';\nimport { connect } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport SingleProduct from '../Common/SingleProduct';\nimport { addToCart } from '../../store/actions/cartActions';\n\nclass RecentProducts extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      QuickViewModal: false,\n      modalProduct: {},\n      products: []\n    });\n\n    _defineProperty(this, \"toggleModal\", () => {\n      this.setState({\n        QuickViewModal: !this.state.QuickViewModal\n      });\n    });\n\n    _defineProperty(this, \"handleAddToCart\", id => {\n      this.props.addToCart(id);\n      toast.success('Added to the cart', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n\n    _defineProperty(this, \"passDataToModal\", product => {\n      this.setState({\n        modalProduct: product\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      products: this.props.products\n    });\n  }\n\n  render() {\n    // console.log(products)\n    return __jsx(React.Fragment, null, __jsx(\"section\", {\n      className: \"products-area pt-100 pb-70\"\n    }, __jsx(ToastContainer, null), __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"section-title\"\n    }, __jsx(\"span\", {\n      className: \"sub-title\"\n    }, \"See Our Collection\"), __jsx(\"h2\", null, \"Recent Products\")), __jsx(\"div\", {\n      className: \"row\"\n    }, !!this.state.products.length && this.state.products.map((product, idx) => __jsx(SingleProduct, {\n      styleCls: \"col-lg-4 col-sm-6\",\n      product: product,\n      key: idx,\n      onHandleAddToCart: this.handleAddToCart,\n      onhandleModalProduct: this.passDataToModal,\n      ontoggleModal: this.toggleModal\n    }))))), __jsx(QuickViewModal, {\n      onClick: this.toggleModal,\n      active: this.state.QuickViewModal ? 'active' : '',\n      product: this.state.modalProduct\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: id => {\n      dispatch(addToCart(id));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(RecentProducts);","map":{"version":3,"sources":["C:/Users/EloyCastillo/Desktop/SDCorp_SGAN/front-end/components/Covid19/RecentProducts.jsx"],"names":["React","Component","QuickViewModal","connect","ToastContainer","toast","SingleProduct","addToCart","RecentProducts","modalProduct","products","setState","state","id","props","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","product","componentDidMount","render","length","map","idx","handleAddToCart","passDataToModal","toggleModal","mapDispatchToProps","dispatch"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAASC,SAAT,QAA0B,iCAA1B;;AACA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAE3B;AACJC,MAAAA,cAAc,EAAE,KADZ;AAEJO,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,QAAQ,EAAE;AAHN,KAF2B;;AAAA,yCAcrB,MAAM;AAChB,WAAKC,QAAL,CAAc;AACVT,QAAAA,cAAc,EAAE,CAAC,KAAKU,KAAL,CAAWV;AADlB,OAAd;AAGH,KAlBkC;;AAAA,6CAoBhBW,EAAD,IAAQ;AACtB,WAAKC,KAAL,CAAWP,SAAX,CAAqBM,EAArB;AACAR,MAAAA,KAAK,CAACU,OAAN,CAAc,mBAAd,EAAmC;AAC/BC,QAAAA,QAAQ,EAAE,aADqB;AAE/BC,QAAAA,SAAS,EAAE,IAFoB;AAG/BC,QAAAA,eAAe,EAAE,KAHc;AAI/BC,QAAAA,YAAY,EAAE,IAJiB;AAK/BC,QAAAA,YAAY,EAAE,IALiB;AAM/BC,QAAAA,SAAS,EAAE;AANoB,OAAnC;AAQH,KA9BkC;;AAAA,6CAgChBC,OAAD,IAAa;AAC3B,WAAKX,QAAL,CAAc;AACVF,QAAAA,YAAY,EAAEa;AADJ,OAAd;AAGH,KApCkC;AAAA;;AAQnCC,EAAAA,iBAAiB,GAAE;AACf,SAAKZ,QAAL,CAAc;AACVD,MAAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWJ;AADX,KAAd;AAGH;;AA0BDc,EAAAA,MAAM,GAAG;AACL;AACA,WACI,MAAC,KAAD,CAAO,QAAP,QACI;AAAS,MAAA,SAAS,EAAC;AAAnB,OACI,MAAC,cAAD,OADJ,EAEI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAM,MAAA,SAAS,EAAC;AAAhB,4BADJ,EAEI,oCAFJ,CADJ,EAMI;AAAK,MAAA,SAAS,EAAC;AAAf,OACK,CAAC,CAAC,KAAKZ,KAAL,CAAWF,QAAX,CAAoBe,MAAtB,IAAgC,KAAKb,KAAL,CAAWF,QAAX,CAAoBgB,GAApB,CAAwB,CAACJ,OAAD,EAAUK,GAAV,KACrD,MAAC,aAAD;AACI,MAAA,QAAQ,EAAC,mBADb;AAEI,MAAA,OAAO,EAAEL,OAFb;AAGI,MAAA,GAAG,EAAEK,GAHT;AAII,MAAA,iBAAiB,EAAE,KAAKC,eAJ5B;AAKI,MAAA,oBAAoB,EAAE,KAAKC,eAL/B;AAMI,MAAA,aAAa,EAAE,KAAKC;AANxB,MAD6B,CADrC,CANJ,CAFJ,CADJ,EAyBI,MAAC,cAAD;AACI,MAAA,OAAO,EAAE,KAAKA,WADlB;AAC+B,MAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWV,cAAX,GAA4B,QAA5B,GAAuC,EAD9E;AAEI,MAAA,OAAO,EAAE,KAAKU,KAAL,CAAWH;AAFxB,MAzBJ,CADJ;AAgCH;;AAxEkC;;AA2EvC,MAAMsB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHzB,IAAAA,SAAS,EAAGM,EAAD,IAAQ;AAAEmB,MAAAA,QAAQ,CAACzB,SAAS,CAACM,EAAD,CAAV,CAAR;AAAyB;AAD3C,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAClB,IADkB,EAElB4B,kBAFkB,CAAP,CAGbvB,cAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport QuickViewModal from '../Modals/QuickViewModal';\r\nimport { connect } from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport SingleProduct from '../Common/SingleProduct';\r\nimport { addToCart } from '../../store/actions/cartActions';\r\nclass RecentProducts extends Component {\r\n    \r\n    state = {\r\n        QuickViewModal: false,\r\n        modalProduct: {},\r\n        products: []\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            products: this.props.products\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            QuickViewModal: !this.state.QuickViewModal\r\n        });\r\n    }\r\n\r\n    handleAddToCart = (id) => {\r\n        this.props.addToCart(id); \r\n        toast.success('Added to the cart', {\r\n            position: \"bottom-left\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true\r\n        });\r\n    }\r\n\r\n    passDataToModal = (product) => {\r\n        this.setState({\r\n            modalProduct: product\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // console.log(products)\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"products-area pt-100 pb-70\">\r\n                    <ToastContainer />\r\n                    <div className=\"container\">\r\n                        <div className=\"section-title\">\r\n                            <span className=\"sub-title\">See Our Collection</span>\r\n                            <h2>Recent Products</h2>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            {!!this.state.products.length && this.state.products.map((product, idx) => (\r\n                                <SingleProduct \r\n                                    styleCls=\"col-lg-4 col-sm-6\"\r\n                                    product={product}\r\n                                    key={idx}\r\n                                    onHandleAddToCart={this.handleAddToCart}\r\n                                    onhandleModalProduct={this.passDataToModal}\r\n                                    ontoggleModal={this.toggleModal}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {/* Quick View Modal */}\r\n                <QuickViewModal\r\n                    onClick={this.toggleModal} active={this.state.QuickViewModal ? 'active' : ''}\r\n                    product={this.state.modalProduct}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToCart: (id) => { dispatch(addToCart(id)) }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(RecentProducts);"]},"metadata":{},"sourceType":"module"}